{"version":3,"file":"303.js","mappings":"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","sources":["./src/app/modules/application/github/github-repos/github-repos-routing.module.ts","./src/app/modules/application/github/github-repos/github-repos.component.html","./src/app/modules/application/github/github-repos/github-repos.component.ts","./src/app/modules/application/github/github-repos/github-repos.module.ts","./src/app/services/github.service.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { GithubReposComponent } from \"./github-repos.component\";\n\nconst routes: Routes = [{ path: \"\", component: GithubReposComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GithubReposRoutingModule {}\n","<head>\n  <meta  name=\"description\" content=\"Shows repo data from the Github API\" />\n</head>\n\n<div class=\"card bg-light\">\n  <div class=\"d-flex justify-content-around\">\n    <div class=\"p-2\">\n      <a (click)=\"returnToUser()\" class=\"btn btn-outline-dark\"\n        >Back to List</a\n      >\n    </div>\n  </div>\n</div>\n<!--cards for book search results-->\n<div class=\"github-card pb-2\" *ngFor=\"let repo of repos | async; trackBy: repoTrackbyFn\">\n  <div class=\"card rounded\" *ngIf=\"repo\">\n    <div class=\"card-header text-white backgroundSecondaryBlue\">\n      <h6 class=\"card-title mb-0\">\n        Name: {{ repo.name }}\n      </h6>\n    </div>\n    <div class=\"card-body pb-0\">\n      <p class=\"mb-2\">\n        <span class=\"font-weight-bold pr-2\">Description:</span\n        >{{ repo.description }}\n      </p>\n      <p class=\"mb-2\">\n        <span class=\"font-weight-bold pr-2 mb-2\">Updated:</span\n        >{{ repo.updated_at | dateConvert }}\n      </p>\n      <p class=\"mb-2\" *ngIf=\"repo.language\">\n        <span class=\"font-weight-bold pr-2 mb-2\">Language:</span\n        >{{ repo.language }}\n      </p>\n      <p class=\"mb-2\" *ngIf=\"!repo.language\">\n        <span class=\"font-weight-bold pr-2\">Languages:</span>None\n      </p>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Location } from \"@angular/common\";\n\nimport { GithubService } from \"../../../../services/github.service\";\nimport { Repo } from \"../../../../models/repo\";\nimport { Observable } from \"rxjs\";\n\n@Component({\n  selector: \"app-github-repos\",\n  templateUrl: \"./github-repos.component.html\",\n  styleUrls: [\"./github-repos.component.css\"],\n})\nexport class GithubReposComponent implements OnInit {\n  repos: Observable<Repo>;\n  userName: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private githubService: GithubService,\n    private location: Location\n  ) {}\n\n  // on init run searchRepos function with input username from router params\n  ngOnInit(): void {\n    this.searchRepos(this.route.snapshot.params.username);\n  }\n\n  searchRepos(userName: string): void {\n    this.repos = this.githubService.getRepos(userName);\n  }\n\n  returnToUser(): void {\n    this.location.back();\n  }\n\n  repoTrackbyFn(index: number, item: any): number {\n    return item.repoId;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { GithubReposComponent } from \"./github-repos.component\";\nimport { GithubReposRoutingModule } from \"./github-repos-routing.module\";\nimport { PipesModule } from \"../../../../pipes/pipes.module\";\nimport { SvgGithubModule } from \"../../../../components/svg-github/svg-github.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    GithubReposRoutingModule,\n    PipesModule,\n    SvgGithubModule,\n  ],\n  exports: [GithubReposComponent],\n  declarations: [GithubReposComponent],\n  providers: [],\n})\nexport class GithubReposModule {}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { throwError, Observable } from \"rxjs\";\nimport { catchError, take } from \"rxjs/operators\";\n\nimport { User } from \"../models/user\";\nimport { Repo } from \"../models/repo\";\n\nconst baseUrl = \"https://api.github.com/users/\";\n//const githubAPIKey = process.env.GITHUB_KEY;\n const githubAPIKey = \"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E\";\n\nconst params = new HttpParams().set(\"api_key\", githubAPIKey);\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GithubService {\n  constructor(private http: HttpClient) {}\n\n  getUser(user: string): Observable<User> {\n    const userSearchUrl = `${baseUrl + user}`;\n    return this.http.get<User>(userSearchUrl, { params }).pipe(\n      take(1),\n      catchError((err) => {\n        throw \"error in getting API data. Details: \" + err;\n      })\n    );\n  }\n\n  getRepos(user: string): Observable<Repo> {\n    const repoSearchUrl = `${\n      baseUrl + user + \"/repos?order=updated&sort=desc?per_page=100&page=1\"\n    }`;\n\n    return this.http.get<Repo>(repoSearchUrl, { params }).pipe(\n      take(1),\n      catchError((err) => {\n        throw \"error in getting API data. Details: \" + err;\n      })\n    );\n  }\n}\n"],"names":["RouterModule","GithubReposComponent","routes","path","component","GithubReposRoutingModule","forChild","imports","exports","i0","constructor","route","githubService","location","ngOnInit","searchRepos","snapshot","params","username","userName","repos","getRepos","returnToUser","back","repoTrackbyFn","index","item","repoId","selectors","decls","vars","consts","template","ctx","CommonModule","PipesModule","SvgGithubModule","GithubReposModule","declarations","HttpParams","Observable","catchError","take","baseUrl","githubAPIKey","set","GithubService","http","getUser","user","userSearchUrl","get","pipe","err","repoSearchUrl","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}