{"version":3,"file":"566.js","mappings":"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","sources":["./src/app/components/svg-caretr/svg-caretr.component.ts","./src/assets/svgs/caret_right.svg","./src/app/components/svg-caretr/svg-caretr.module.ts","./src/app/components/svg-chart/svg-chart.component.ts","./src/assets/svgs/chart.svg","./src/app/components/svg-database/svg-database.component.ts","./src/assets/svgs/database.svg","./src/app/components/svg-database/svg-database.module.ts","./src/app/modules/application/google-chart/bar-chart/bar-chart.component.ts","./src/app/modules/application/google-chart/bar-chart/bar-chart.component.html","./src/app/modules/application/google-chart/data-services/crud.service.ts","./src/app/modules/application/google-chart/data-services/google-chart.service.module.ts","./src/app/modules/application/google-chart/data-services/google-chart.service.ts","./src/app/modules/application/google-chart/gauge-chart/gauge-chart.component.ts","./src/app/modules/application/google-chart/gauge-chart/gauge-chart.component.html","./src/app/modules/application/google-chart/google-chart-routing.module.ts","./src/app/modules/application/google-chart/google-chart.component.ts","./src/app/modules/application/google-chart/google-chart.component.html","./src/app/modules/application/google-chart/google-chart.module.ts","./src/app/modules/application/google-chart/line-chart/line-chart.component.ts","./src/app/modules/application/google-chart/line-chart/line-chart.component.html","./src/app/modules/application/google-chart/pie-chart/pie-chart.component.ts","./src/app/modules/application/google-chart/pie-chart/pie-chart.component.html","./src/app/modules/application/google-chart/table-chart/table-chart.component.ts","./src/app/modules/application/google-chart/table-chart/table-chart.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-svg-caretr\",\n  templateUrl: \"../../../../src/assets/svgs/caret_right.svg\",\n  styleUrls: [\"../svg-small.component.css\"],\n})\nexport class SvgCaretrComponent {}\n","<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"caret-square-right\" class=\"svg-inline--fa fa-caret-square-right fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M48 32h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48zm140.485 355.515l123.029-123.029c4.686-4.686 4.686-12.284 0-16.971l-123.029-123.03c-7.56-7.56-20.485-2.206-20.485 8.485v246.059c0 10.691 12.926 16.045 20.485 8.486z\"></path></svg>","import { NgModule } from \"@angular/core\";\nimport { SvgCaretrComponent } from \"../svg-caretr/svg-caretr.component\";\n\n@NgModule({ declarations: [SvgCaretrComponent], exports: [SvgCaretrComponent] })\nexport class SvgCaretrModule {}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-svg-chart\",\n  templateUrl: \"../../../../src/assets/svgs/chart.svg\",\n  styleUrls: [\"../svg.component.css\"],\n})\nexport class SvgChartComponent {}\n","<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"chart-pie\" class=\"svg-inline--fa fa-chart-pie fa-w-17\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 544 512\"><path fill=\"currentColor\" d=\"M527.79 288H290.5l158.03 158.03c6.04 6.04 15.98 6.53 22.19.68 38.7-36.46 65.32-85.61 73.13-140.86 1.34-9.46-6.51-17.85-16.06-17.85zm-15.83-64.8C503.72 103.74 408.26 8.28 288.8.04 279.68-.59 272 7.1 272 16.24V240h223.77c9.14 0 16.82-7.68 16.19-16.8zM224 288V50.71c0-9.55-8.39-17.4-17.84-16.06C86.99 51.49-4.1 155.6.14 280.37 4.5 408.51 114.83 513.59 243.03 511.98c50.4-.63 96.97-16.87 135.26-44.03 7.9-5.6 8.42-17.23 1.57-24.08L224 288z\"></path></svg>","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-svg-database\",\n  templateUrl: \"../../../../src/assets/svgs/database.svg\",\n  styleUrls: [\"./../svg.component.css\"],\n})\nexport class SvgDatabaseComponent {}\n","<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"database\" class=\"svg-inline--fa fa-database fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M448 73.143v45.714C448 159.143 347.667 192 224 192S0 159.143 0 118.857V73.143C0 32.857 100.333 0 224 0s224 32.857 224 73.143zM448 176v102.857C448 319.143 347.667 352 224 352S0 319.143 0 278.857V176c48.125 33.143 136.208 48.572 224 48.572S399.874 209.143 448 176zm0 160v102.857C448 479.143 347.667 512 224 512S0 479.143 0 438.857V336c48.125 33.143 136.208 48.572 224 48.572S399.874 369.143 448 336z\"></path></svg>","import { NgModule } from \"@angular/core\";\nimport { SvgDatabaseComponent } from \"../svg-database/svg-database.component\";\n\n@NgModule({ declarations: [SvgDatabaseComponent], exports: [SvgDatabaseComponent] })\nexport class SvgDatabaseModule {}\n","import { Component, Input } from \"@angular/core\";\n\nimport { GoogleChartService } from \"../data-services/google-chart.service\";\nimport { CrudService } from \"../data-services/crud.service\";\nimport { Metal } from \"../data-models/metal\";\nimport metalsData from \"../../../../../assets/jsonData/metalsData.json\";\n\n@Component({\n  selector: \"app-bar-chart\",\n  templateUrl: \"./bar-chart.component.html\",\n  styleUrls: [\"./bar-chart.component.css\"],\n})\nexport class BarChartComponent {\n  @Input() isProd: boolean = true;\n  private gLib: any;\n  metals: Metal[] = metalsData;\n\n  constructor(\n    private gChartService: GoogleChartService,\n    private crudService: CrudService\n  ) {\n    this.gLib = this.gChartService.getGoogle();\n    this.gLib.charts.load(\"current\", { packages: [\"corechart\"] });\n    this.gLib.charts.setOnLoadCallback(this.drawChart.bind(this));\n  }\n\n  // load metals data from backend database then add it to the array for display by google charts\n  // data converted to array dbDataArr then used to create tempDataArray that is spread into the chartDataArray\n  private drawChart(): void {\n    const dbDataArr = [];\n    const tempDataArray = [];\n    const options = {\n      width: 500,\n      height: 300,\n      bar: { groupWidth: \"95%\" },\n      legend: { position: \"none\" },\n    };\n\n    this.isProd\n      ? this.crudService.getAllMetals().subscribe((items: Metal[]) => {\n          dbDataArr.push(...items);\n          dbDataArr.forEach((item) =>\n            tempDataArray.push([\n              item.element,\n              item.density,\n              item.color,\n              item.symbol,\n            ])\n          );\n        })\n      : metalsData.forEach((item) =>\n          tempDataArray.push([\n            item.element,\n            item.density,\n            item.color,\n            item.symbol,\n          ])\n        );\n\n    // create chart data using the above database or assets data\n    const chartDataArr = [\n      [\"Element\", \"Density\", { role: \"style\" }, { role: \"annotation\" }],\n      ...tempDataArray,\n    ];\n    const data = this.gLib.visualization.arrayToDataTable(chartDataArr);\n    const view = new this.gLib.visualization.DataView(data);\n    view.setColumns([\n      0,\n      1,\n      {\n        calc: \"stringify\",\n        sourceColumn: 1,\n        type: \"string\",\n        role: \"annotation\",\n      },\n      2,\n    ]);\n\n    const chart = new this.gLib.visualization.BarChart(\n      document.getElementById(\"divBarChart\")\n    );\n    chart.draw(data, options);\n  }\n}\n","<h6 class=\"title\">Density of Precious Metals, in g/cm^3</h6>\n<div id=\"divBarChart\"></div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\nimport { Metal } from \"../data-models/metal\";\nimport { CompanyPerformance } from \"../data-models/companyPerformance\";\nimport { FrameworkMarketshare } from \"../data-models/frameworkMarketshare\";\nimport { GaugeData } from \"../data-models/gaugeData\";\nimport { CountryData } from \"..//data-models/countryData\";\n\nconst baseUrl = \"http://localhost:5050\";\n//const baseUrl = \"https://pean-stack-apis.herokuapp.com\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CrudService {\n  constructor(private http: HttpClient) {}\n\n  getAllMetals(): Observable<Metal[]> {\n    return this.http.get<Metal[]>(`${baseUrl}/metals`);\n  }\n\n  getCompanyPerformance(): Observable<CompanyPerformance[]> {\n    return this.http.get<CompanyPerformance[]>(`${baseUrl}/companyPerformance`);\n  }\n\n  getFrameworkMarketshare(): Observable<FrameworkMarketshare[]> {\n    return this.http.get<FrameworkMarketshare[]>(\n      `${baseUrl}/frameworkMarketshare`\n    );\n  }\n\n  getGaugeData(): Observable<GaugeData[]> {\n    return this.http.get<GaugeData[]>(`${baseUrl}/gaugeData`);\n  }\n\n  getCountryData(): Observable<CountryData[]> {\n    return this.http.get<CountryData[]>(`${baseUrl}/CountryData`);\n  }\n\n  createMetal(metal: Metal): Observable<Metal> {\n    return this.http.post<Metal>(baseUrl, metal);\n  }\n\n  update(id: number, metal: Metal): Observable<Metal> {\n    return this.http.put<Metal>(`${baseUrl}/${id}`, metal);\n  }\n\n  deleteMetal(id: number): Observable<Metal> {\n    return this.http.delete<Metal>(`${baseUrl}/${id}`);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n})\nexport class GoogleChartServiceModule {}\n","import { Injectable } from \"@angular/core\";\nimport { GoogleChartServiceModule } from \"../data-services/google-chart.service.module\";\n\ndeclare const google: any;\n\n@Injectable({\n  providedIn: GoogleChartServiceModule,\n})\nexport class GoogleChartService {\n  private google: any;\n  constructor() {\n    this.google = google;\n  }\n\n  getGoogle(): any {\n    return this.google;\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { GaugeData } from \"../data-models/gaugeData\";\nimport { CrudService } from \"../data-services/crud.service\";\nimport { GoogleChartService } from \"../data-services/google-chart.service\";\nimport gaugeData from \"../../../../../assets/jsonData/gaugeData.json\";\n\n@Component({\n  selector: \"app-gauge-chart\",\n  templateUrl: \"./gauge-chart.component.html\",\n  styleUrls: [\"./gauge-chart.component.css\"],\n})\nexport class GaugeChartComponent {\n  @Input() isProd: boolean = true;\n  private gLib: any;\n  gaugeData: GaugeData[] = gaugeData;\n\n  constructor(\n    private gChartService: GoogleChartService,\n    private crudService: CrudService\n  ) {\n    this.gLib = this.gChartService.getGoogle();\n    this.gLib.charts.load(\"current\", { packages: [\"gauge\"] });\n    this.gLib.charts.setOnLoadCallback(this.drawChart.bind(this));\n  }\n\n  private drawChart(): void {\n    const dbDataArr = [];\n    const tempDataArray = [];\n    const options = {\n      width: 400,\n      height: 110,\n      redFrom: 90,\n      redTo: 100,\n      yellowFrom: 75,\n      yellowTo: 90,\n      minorTicks: 5,\n    };\n\n    this.isProd\n      ? this.crudService.getGaugeData().subscribe((items: GaugeData[]) => {\n          dbDataArr.push(...items);\n          dbDataArr.forEach((item) =>\n            tempDataArray.push([item.label, item.reading])\n          );\n        })\n      : gaugeData.forEach((item) =>\n          tempDataArray.push([item.label, item.reading])\n        );\n\n    // create chart data using the above database or assets data\n    const data = this.gLib.visualization.arrayToDataTable([\n      [\"Label\", \"Value\"],\n      ...tempDataArray,\n    ]);\n    const chart = new this.gLib.visualization.Gauge(\n      document.getElementById(\"divGaugeChart\")\n    );\n    chart.draw(data, options);\n\n    setInterval(() => {\n      data.setValue(0, 1, 40 + Math.round(60 * Math.random()));\n      chart.draw(data, options);\n    }, 13000);\n    setInterval(() => {\n      data.setValue(1, 1, 40 + Math.round(60 * Math.random()));\n      chart.draw(data, options);\n    }, 5050);\n    setInterval(() => {\n      data.setValue(2, 1, 60 + Math.round(20 * Math.random()));\n      chart.draw(data, options);\n    }, 26000);\n  }\n}\n","<h6 class=\"title\">Gauges Displaying Data From Backend Postgres Database</h6>\n<div id=\"divGaugeChart\"></div>\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { GoogleChartComponent } from \"./google-chart.component\";\n\nconst routes: Routes = [{ path: \"\", component: GoogleChartComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GoogleChartRoutingModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { environment } from \"../../../../environments/environment\";\n\n@Component({\n  selector: \"app-google-chart\",\n  templateUrl: \"./google-chart.component.html\",\n  styleUrls: [\"./google-chart.component.css\"],\n})\nexport class GoogleChartComponent implements OnInit {\n  isProd = true;\n\n  ngOnInit(): void {\n    !environment.production ? (this.isProd = false) : null;\n  }\n}\n","<head>\n  <meta name=\"description\" content=\"Shows google charts data\" />\n</head>\n\n<div class=\"main-div\">\n  <div class=\"card rounded\">\n    <div class=\"card-header bg-light\">\n      <div class=\"row\">\n        <div class=\"col-2\">\n          <img\n            class=\"header-image\"\n            src=\"../../../../assets/svgs/chart.svg\"\n            alt=\"Chart logo\"\n          />\n        </div>\n        <div class=\"col-10\">\n          <h5 class=\"card-title text-dark float-left p-0\">Google Charts</h5>\n          <h6 class=\"card-subtitle font-italic float-left p-0\">\n            Data from POSTgreSQL\n          </h6>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"accordion\" id=\"accordionExample\">\n    <!--item 1-->\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\" id=\"headingOne\">\n        <button\n          class=\"accordion-button\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#collapseOne\"\n          aria-expanded=\"true\"\n          aria-controls=\"collapseOne\"\n        >\n          Line Chart\n        </button>\n      </h2>\n      <div\n        id=\"collapseOne\"\n        class=\"accordion-collapse collapse show\"\n        aria-labelledby=\"headingOne\"\n        data-bs-parent=\"#accordionExample\"\n      >\n        <div class=\"accordion-body\">\n          <app-line-chart [isProd]=\"isProd\"></app-line-chart>\n        </div>\n      </div>\n    </div>\n\n    <!--item 2-->\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\" id=\"headingTwo\">\n        <button\n          class=\"accordion-button collapsed\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#collapseTwo\"\n          aria-expanded=\"false\"\n          aria-controls=\"collapseTwo\"\n        >\n          Pie Chart\n        </button>\n      </h2>\n      <div\n        id=\"collapseTwo\"\n        class=\"accordion-collapse collapse\"\n        aria-labelledby=\"headingTwo\"\n        data-bs-parent=\"#accordionExample\"\n      >\n        <div class=\"accordion-body\">\n          <app-pie-chart [isProd]=\"isProd\"></app-pie-chart>\n        </div>\n      </div>\n    </div>\n\n    <!--item 3-->\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\" id=\"headingThree\">\n        <button\n          class=\"accordion-button collapsed\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#collapseThree\"\n          aria-expanded=\"false\"\n          aria-controls=\"collapseThree\"\n        >\n          Gauges\n        </button>\n      </h2>\n      <div\n        id=\"collapseThree\"\n        class=\"accordion-collapse collapse\"\n        aria-labelledby=\"headingThree\"\n        data-bs-parent=\"#accordionExample\"\n      >\n        <div class=\"accordion-body\">\n          <app-gauge-chart [isProd]=\"isProd\"></app-gauge-chart>\n        </div>\n      </div>\n    </div>\n\n    <!--item 4-->\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\" id=\"headingFour\">\n        <button\n          class=\"accordion-button collapsed\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#collapseFour\"\n          aria-expanded=\"false\"\n          aria-controls=\"collapseFour\"\n        >\n          Countries\n        </button>\n      </h2>\n      <div\n        id=\"collapseFour\"\n        class=\"accordion-collapse collapse\"\n        aria-labelledby=\"headingFour\"\n        data-bs-parent=\"#accordionExample\"\n      >\n        <div class=\"accordion-body\">\n          <app-table-chart [isProd]=\"isProd\"></app-table-chart>\n        </div>\n      </div>\n    </div>\n\n    <!--item 5-->\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\" id=\"headingFive\">\n        <button\n          class=\"accordion-button collapsed\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#collapseFive\"\n          aria-expanded=\"false\"\n          aria-controls=\"collapseFive\"\n        >\n          Bar Chart\n        </button>\n      </h2>\n      <div\n        id=\"collapseFive\"\n        class=\"accordion-collapse collapse\"\n        aria-labelledby=\"headingFive\"\n        data-bs-parent=\"#accordionExample\"\n      >\n        <div class=\"accordion-body\">\n          <app-bar-chart [isProd]=\"isProd\"></app-bar-chart>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { LineChartComponent } from \"./line-chart/line-chart.component\";\nimport { PieChartComponent } from \"./pie-chart/pie-chart.component\";\nimport { TableChartComponent } from \"./table-chart/table-chart.component\";\nimport { GaugeChartComponent } from \"./gauge-chart/gauge-chart.component\";\nimport { BarChartComponent } from \"./bar-chart/bar-chart.component\";\n\nimport { GoogleChartComponent } from \"./google-chart.component\";\nimport { GoogleChartRoutingModule } from \"./google-chart-routing.module\";\nimport { SvgChartComponent } from \"./../../../components/svg-chart/svg-chart.component\";\nimport { SvgDatabaseModule } from \"./../../../components/svg-database/svg-database.module\";\nimport { SvgCaretrModule } from \"./../../../components/svg-caretr/svg-caretr.module\";\nimport { GoogleChartServiceModule } from \"./data-services/google-chart.service.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    GoogleChartServiceModule,\n    GoogleChartRoutingModule,\n    SvgDatabaseModule,\n    SvgCaretrModule\n  ],\n  exports: [\n    LineChartComponent,\n    PieChartComponent,\n    TableChartComponent,\n    GaugeChartComponent,\n    BarChartComponent\n  ],\n  declarations: [\n    GoogleChartComponent,\n    LineChartComponent,\n    PieChartComponent,\n    TableChartComponent,\n    GaugeChartComponent,\n    BarChartComponent,\n    SvgChartComponent\n  ],\n})\nexport class GoogleChartModule {}\n","import { Component, Input } from \"@angular/core\";\n\nimport { GoogleChartService } from \"../data-services/google-chart.service\";\nimport { CrudService } from \"../data-services/crud.service\";\nimport { CompanyPerformance } from \"../data-models/companyPerformance\";\nimport compPerfData from \"../../../../../assets/jsonData/compPerfData.json\";\n\n@Component({\n  selector: \"app-line-chart\",\n  templateUrl: \"./line-chart.component.html\",\n  styleUrls: [\"./line-chart.component.css\"],\n})\nexport class LineChartComponent {\n  @Input() isProd: boolean = true;\n  private gLib: any;\n  compPerfData: CompanyPerformance[] = compPerfData;\n\n  constructor(\n    private gChartService: GoogleChartService,\n    private crudService: CrudService\n  ) {\n    this.gLib = this.gChartService.getGoogle();\n    this.gLib.charts.load(\"current\", { packages: [\"corechart\", \"table\"] });\n    this.gLib.charts.setOnLoadCallback(this.drawChart.bind(this));\n  }\n\n  private drawChart(): void {\n    const dbDataArr = [];\n    const tempDataArray = [];\n    const options = {\n      subtitle: \"in millions of euro (EUR)\",\n      vAxis: { title: \"Revenue (million euro)\" },\n      hAxis: { title: \"Year\" },\n      width: 350,\n      height: 300,\n      curveType: \"function\",\n      legend: { position: \"bottom\" },\n    };\n    this.isProd\n      ? this.crudService\n          .getCompanyPerformance()\n          .subscribe((items: CompanyPerformance[]) => {\n            dbDataArr.push(...items);\n            dbDataArr.forEach((item) =>\n              tempDataArray.push([item.year, item.sales, item.expenses])\n            );\n\n            // create chart using the above array\n            const data = this.gLib.visualization.arrayToDataTable([\n              [\"Year\", \"Sales\", \"Expenses\"],\n              ...tempDataArray,\n            ]);\n            const chart = new this.gLib.visualization.LineChart(\n              document.getElementById(\"divLineChart\")\n            );\n            chart.draw(data, options);\n          })\n      : compPerfData.forEach((item) =>\n          tempDataArray.push([item.year, item.sales, item.expenses])\n        );\n\n    // create chart data using the above database or assets data\n    const data = this.gLib.visualization.arrayToDataTable([\n      [\"Year\", \"Sales\", \"Expenses\"],\n      ...tempDataArray,\n    ]);\n    const chart = new this.gLib.visualization.LineChart(\n      document.getElementById(\"divLineChart\")\n    );\n    chart.draw(data, options);\n  }\n}\n","<h6 class=\"title\">Yearly Company Performance (MM euro)</h6>\n<div id=\"divLineChart\"></div>\n","import { Component, Input } from \"@angular/core\";\nimport { FrameworkMarketshare } from \"../data-models/frameworkMarketshare\";\nimport { CrudService } from \"../data-services/crud.service\";\nimport { GoogleChartService } from \"../data-services/google-chart.service\";\nimport frameworkMarketData from \"../../../../../assets/jsonData/frameworkMarketData.json\";\n\n@Component({\n  selector: \"app-pie-chart\",\n  templateUrl: \"./pie-chart.component.html\",\n  styleUrls: [\"./pie-chart.component.css\"],\n})\nexport class PieChartComponent {\n  @Input() isProd: boolean = true;\n  private gLib: any;\n  frameworkMarketData: FrameworkMarketshare[] = frameworkMarketData;\n\n  constructor(\n    private gChartService: GoogleChartService,\n    private crudService: CrudService\n  ) {\n    this.gLib = this.gChartService.getGoogle();\n    this.gLib.charts.load(\"current\", { packages: [\"corechart\"] });\n    this.gLib.charts.setOnLoadCallback(this.drawChart.bind(this));\n  }\n\n  private drawChart(): void {\n    const dbDataArr = [];\n    const tempDataArray = [];\n    const options = {\n      chartArea: {\n        left: \"3%\",\n        top: \"3%\",\n        height: \"94%\",\n        width: \"94%\",\n      },\n      is3D: true,\n      pieHole: 0.2,\n      pieSliceTextStyle: {\n        color: \"white\",\n        margin: 0,\n        padding: 0,\n        // position: \"center\",\n      },\n    };\n\n    this.isProd\n      ? this.crudService\n          .getFrameworkMarketshare()\n          .subscribe((items: FrameworkMarketshare[]) => {\n            dbDataArr.push(...items);\n            dbDataArr.forEach((item) =>\n              tempDataArray.push([item.framework, +item.share])\n            );\n          })\n      : frameworkMarketData.forEach((item) =>\n          tempDataArray.push([item.framework, +item.share])\n        );\n\n    // create chart data using the above database or assets data\n    const data = new this.gLib.visualization.DataTable();\n    const chart = new this.gLib.visualization.PieChart(\n      document.getElementById(\"divPieChart\")\n    );\n    data.addColumn(\"string\", \"Framework\");\n    data.addColumn(\"number\", \"%\");\n    data.addRows([...tempDataArray]);\n    chart.draw(data, options);\n  }\n}\n","<h6 class=\"title\">Top JS Framework Market Share</h6>\n<div id=\"divPieChart\"></div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { GoogleChartService } from \"../data-services/google-chart.service\";\nimport { CrudService } from \"../data-services/crud.service\";\nimport { CountryData } from \"../data-models/countryData\";\nimport countryData from \"../../../../../assets/jsonData/countryData.json\";\n\n@Component({\n  selector: \"app-table-chart\",\n  templateUrl: \"./table-chart.component.html\",\n  styleUrls: [\"./table-chart.component.css\"],\n})\nexport class TableChartComponent {\n  @Input() isProd: boolean = true;\n  private gLib: any;\n  countryData: CountryData[] = countryData;\n\n  constructor(\n    private gChartService: GoogleChartService,\n    private crudService: CrudService\n  ) {\n    this.gLib = this.gChartService.getGoogle();\n    this.gLib.charts.load(\"current\", { packages: [\"table\"] });\n    this.gLib.charts.setOnLoadCallback(this.drawTable.bind(this));\n  }\n\n  private drawTable(): void {\n    const dbDataArr = [];\n    const tempDataArray = [];\n    const cssClassNames = {\n      tableCell: \"cssTableCell\",\n    };\n    const options = {\n      showRowNumber: false,\n      allowHtml: true,\n      cssClassNames,\n    };\n\n    this.isProd\n      ? this.crudService.getCountryData().subscribe((items: CountryData[]) => {\n          dbDataArr.push(...items);\n          dbDataArr.forEach((item) =>\n            tempDataArray.push([item.name, item.population, item.bordersMed])\n          );\n        })\n      : countryData.forEach((item) =>\n          tempDataArray.push([item.name, item.population, item.bordersMed])\n        );\n\n    // create chart data using the above database or assets data\n    const table = new this.gLib.visualization.Table(\n      document.getElementById(\"divTableChart\")\n    );\n    const data = new this.gLib.visualization.DataTable();\n    data.addColumn(\"string\", \"Country\");\n    data.addColumn(\"number\", \"Pop. (MM)\");\n    data.addColumn(\"boolean\", \"Borders Med.\");\n    data.addRows([...tempDataArray]);\n    table.draw(data, options);\n  }\n}\n","<h6 class=\"title\">Top Ten European Countries by Population</h6>\n<div id=\"divTableChart\"></div>\n"],"names":["SvgCaretrComponent","selectors","decls","vars","consts","template","i0","SvgCaretrModule","declarations","exports","SvgChartComponent","SvgDatabaseComponent","SvgDatabaseModule","metalsData","BarChartComponent","constructor","gChartService","crudService","gLib","getGoogle","charts","load","packages","setOnLoadCallback","drawChart","bind","dbDataArr","tempDataArray","options","width","height","bar","groupWidth","legend","position","isProd","getAllMetals","subscribe","items","push","forEach","item","element","density","color","symbol","chartDataArr","role","data","visualization","arrayToDataTable","view","DataView","setColumns","calc","sourceColumn","type","chart","BarChart","document","getElementById","draw","inputs","baseUrl","CrudService","http","get","getCompanyPerformance","getFrameworkMarketshare","getGaugeData","getCountryData","createMetal","metal","post","update","id","put","deleteMetal","delete","factory","providedIn","CommonModule","GoogleChartServiceModule","imports","GoogleChartService","google","gaugeData","GaugeChartComponent","redFrom","redTo","yellowFrom","yellowTo","minorTicks","label","reading","Gauge","setInterval","setValue","Math","round","random","RouterModule","GoogleChartComponent","routes","path","component","GoogleChartRoutingModule","forChild","environment","ngOnInit","production","LineChartComponent","PieChartComponent","TableChartComponent","GoogleChartModule","compPerfData","subtitle","vAxis","title","hAxis","curveType","year","sales","expenses","LineChart","frameworkMarketData","chartArea","left","top","is3D","pieHole","pieSliceTextStyle","margin","padding","framework","share","DataTable","PieChart","addColumn","addRows","countryData","drawTable","cssClassNames","tableCell","showRowNumber","allowHtml","name","population","bordersMed","table","Table"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}